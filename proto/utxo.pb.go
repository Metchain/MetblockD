// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.3
// source: utxo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UTXORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txhash string `protobuf:"bytes,1,opt,name=txhash,proto3" json:"txhash,omitempty"`
}

func (x *UTXORequest) Reset() {
	*x = UTXORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UTXORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UTXORequest) ProtoMessage() {}

func (x *UTXORequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UTXORequest.ProtoReflect.Descriptor instead.
func (*UTXORequest) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{0}
}

func (x *UTXORequest) GetTxhash() string {
	if x != nil {
		return x.Txhash
	}
	return ""
}

type UTXOResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txhash     string `protobuf:"bytes,1,opt,name=txhash,proto3" json:"txhash,omitempty"`
	Blockhash  string `protobuf:"bytes,2,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
	Fromwallet string `protobuf:"bytes,3,opt,name=fromwallet,proto3" json:"fromwallet,omitempty"`
	Towallet   string `protobuf:"bytes,4,opt,name=towallet,proto3" json:"towallet,omitempty"`
	Amount     string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Txtype     string `protobuf:"bytes,6,opt,name=txtype,proto3" json:"txtype,omitempty"`
	Timestamp  string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Error      string `protobuf:"bytes,8,opt,name=error,proto3" json:"error,omitempty"`
	Blockid    string `protobuf:"bytes,9,opt,name=blockid,proto3" json:"blockid,omitempty"`
}

func (x *UTXOResponse) Reset() {
	*x = UTXOResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UTXOResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UTXOResponse) ProtoMessage() {}

func (x *UTXOResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UTXOResponse.ProtoReflect.Descriptor instead.
func (*UTXOResponse) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{1}
}

func (x *UTXOResponse) GetTxhash() string {
	if x != nil {
		return x.Txhash
	}
	return ""
}

func (x *UTXOResponse) GetBlockhash() string {
	if x != nil {
		return x.Blockhash
	}
	return ""
}

func (x *UTXOResponse) GetFromwallet() string {
	if x != nil {
		return x.Fromwallet
	}
	return ""
}

func (x *UTXOResponse) GetTowallet() string {
	if x != nil {
		return x.Towallet
	}
	return ""
}

func (x *UTXOResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *UTXOResponse) GetTxtype() string {
	if x != nil {
		return x.Txtype
	}
	return ""
}

func (x *UTXOResponse) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UTXOResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *UTXOResponse) GetBlockid() string {
	if x != nil {
		return x.Blockid
	}
	return ""
}

type WalletBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress string `protobuf:"bytes,1,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
}

func (x *WalletBalanceRequest) Reset() {
	*x = WalletBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalanceRequest) ProtoMessage() {}

func (x *WalletBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalanceRequest.ProtoReflect.Descriptor instead.
func (*WalletBalanceRequest) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{2}
}

func (x *WalletBalanceRequest) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

type WalletBalanceRespose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress string   `protobuf:"bytes,1,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
	Txhash        []string `protobuf:"bytes,4,rep,name=txhash,proto3" json:"txhash,omitempty"`
	Amount        string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Error         string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *WalletBalanceRespose) Reset() {
	*x = WalletBalanceRespose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalanceRespose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalanceRespose) ProtoMessage() {}

func (x *WalletBalanceRespose) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalanceRespose.ProtoReflect.Descriptor instead.
func (*WalletBalanceRespose) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{3}
}

func (x *WalletBalanceRespose) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

func (x *WalletBalanceRespose) GetTxhash() []string {
	if x != nil {
		return x.Txhash
	}
	return nil
}

func (x *WalletBalanceRespose) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WalletBalanceRespose) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UTXOWalletBalanceRespose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress string      `protobuf:"bytes,1,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
	Wallettx      []*Wallettx `protobuf:"bytes,4,rep,name=wallettx,proto3" json:"wallettx,omitempty"`
	NFT           []int64     `protobuf:"varint,5,rep,packed,name=NFT,proto3" json:"NFT,omitempty"`
	Amount        string      `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Error         string      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UTXOWalletBalanceRespose) Reset() {
	*x = UTXOWalletBalanceRespose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UTXOWalletBalanceRespose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UTXOWalletBalanceRespose) ProtoMessage() {}

func (x *UTXOWalletBalanceRespose) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UTXOWalletBalanceRespose.ProtoReflect.Descriptor instead.
func (*UTXOWalletBalanceRespose) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{4}
}

func (x *UTXOWalletBalanceRespose) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

func (x *UTXOWalletBalanceRespose) GetWallettx() []*Wallettx {
	if x != nil {
		return x.Wallettx
	}
	return nil
}

func (x *UTXOWalletBalanceRespose) GetNFT() []int64 {
	if x != nil {
		return x.NFT
	}
	return nil
}

func (x *UTXOWalletBalanceRespose) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *UTXOWalletBalanceRespose) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UTXOAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress string `protobuf:"bytes,1,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
}

func (x *UTXOAddressRequest) Reset() {
	*x = UTXOAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UTXOAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UTXOAddressRequest) ProtoMessage() {}

func (x *UTXOAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UTXOAddressRequest.ProtoReflect.Descriptor instead.
func (*UTXOAddressRequest) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{5}
}

func (x *UTXOAddressRequest) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

type UTXOAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallettxs []*Wallettx `protobuf:"bytes,1,rep,name=Wallettxs,proto3" json:"Wallettxs,omitempty"`
	Txhash    []string    `protobuf:"bytes,2,rep,name=txhash,proto3" json:"txhash,omitempty"`
}

func (x *UTXOAddressResponse) Reset() {
	*x = UTXOAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UTXOAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UTXOAddressResponse) ProtoMessage() {}

func (x *UTXOAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UTXOAddressResponse.ProtoReflect.Descriptor instead.
func (*UTXOAddressResponse) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{6}
}

func (x *UTXOAddressResponse) GetWallettxs() []*Wallettx {
	if x != nil {
		return x.Wallettxs
	}
	return nil
}

func (x *UTXOAddressResponse) GetTxhash() []string {
	if x != nil {
		return x.Txhash
	}
	return nil
}

type Wallettx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress string `protobuf:"bytes,1,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
	Fromwallet    string `protobuf:"bytes,2,opt,name=fromwallet,proto3" json:"fromwallet,omitempty"`
	Towallet      string `protobuf:"bytes,3,opt,name=towallet,proto3" json:"towallet,omitempty"`
	Value         string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Txtype        string `protobuf:"bytes,5,opt,name=txtype,proto3" json:"txtype,omitempty"`
	Timestamp     string `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Blockhash     string `protobuf:"bytes,7,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
	Txstatus      string `protobuf:"bytes,10,opt,name=txstatus,proto3" json:"txstatus,omitempty"`
	Txhash        string `protobuf:"bytes,9,opt,name=txhash,proto3" json:"txhash,omitempty"`
	Error         string `protobuf:"bytes,8,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Wallettx) Reset() {
	*x = Wallettx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallettx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallettx) ProtoMessage() {}

func (x *Wallettx) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallettx.ProtoReflect.Descriptor instead.
func (*Wallettx) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{7}
}

func (x *Wallettx) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

func (x *Wallettx) GetFromwallet() string {
	if x != nil {
		return x.Fromwallet
	}
	return ""
}

func (x *Wallettx) GetTowallet() string {
	if x != nil {
		return x.Towallet
	}
	return ""
}

func (x *Wallettx) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Wallettx) GetTxtype() string {
	if x != nil {
		return x.Txtype
	}
	return ""
}

func (x *Wallettx) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Wallettx) GetBlockhash() string {
	if x != nil {
		return x.Blockhash
	}
	return ""
}

func (x *Wallettx) GetTxstatus() string {
	if x != nil {
		return x.Txstatus
	}
	return ""
}

func (x *Wallettx) GetTxhash() string {
	if x != nil {
		return x.Txhash
	}
	return ""
}

func (x *Wallettx) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type WalletBalancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddresses []string `protobuf:"bytes,1,rep,name=walletAddresses,proto3" json:"walletAddresses,omitempty"`
}

func (x *WalletBalancesRequest) Reset() {
	*x = WalletBalancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalancesRequest) ProtoMessage() {}

func (x *WalletBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalancesRequest.ProtoReflect.Descriptor instead.
func (*WalletBalancesRequest) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{8}
}

func (x *WalletBalancesRequest) GetWalletAddresses() []string {
	if x != nil {
		return x.WalletAddresses
	}
	return nil
}

type WalletBalancesRespose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress []*WalletBalanceRespose `protobuf:"bytes,1,rep,name=walletAddress,proto3" json:"walletAddress,omitempty"`
	Error         string                  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *WalletBalancesRespose) Reset() {
	*x = WalletBalancesRespose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalancesRespose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalancesRespose) ProtoMessage() {}

func (x *WalletBalancesRespose) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalancesRespose.ProtoReflect.Descriptor instead.
func (*WalletBalancesRespose) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{9}
}

func (x *WalletBalancesRespose) GetWalletAddress() []*WalletBalanceRespose {
	if x != nil {
		return x.WalletAddress
	}
	return nil
}

func (x *WalletBalancesRespose) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type VWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress string `protobuf:"bytes,1,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
}

func (x *VWalletRequest) Reset() {
	*x = VWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VWalletRequest) ProtoMessage() {}

func (x *VWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VWalletRequest.ProtoReflect.Descriptor instead.
func (*VWalletRequest) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{10}
}

func (x *VWalletRequest) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

type VWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress string `protobuf:"bytes,1,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
	Blockhash     string `protobuf:"bytes,2,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
	Lockhash      string `protobuf:"bytes,3,opt,name=lockhash,proto3" json:"lockhash,omitempty"`
	Walletid      uint64 `protobuf:"varint,4,opt,name=walletid,proto3" json:"walletid,omitempty"`
}

func (x *VWalletResponse) Reset() {
	*x = VWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VWalletResponse) ProtoMessage() {}

func (x *VWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VWalletResponse.ProtoReflect.Descriptor instead.
func (*VWalletResponse) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{11}
}

func (x *VWalletResponse) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

func (x *VWalletResponse) GetBlockhash() string {
	if x != nil {
		return x.Blockhash
	}
	return ""
}

func (x *VWalletResponse) GetLockhash() string {
	if x != nil {
		return x.Lockhash
	}
	return ""
}

func (x *VWalletResponse) GetWalletid() uint64 {
	if x != nil {
		return x.Walletid
	}
	return 0
}

type NFTRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nftid string `protobuf:"bytes,1,opt,name=nftid,proto3" json:"nftid,omitempty"`
}

func (x *NFTRequest) Reset() {
	*x = NFTRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NFTRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NFTRequest) ProtoMessage() {}

func (x *NFTRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NFTRequest.ProtoReflect.Descriptor instead.
func (*NFTRequest) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{12}
}

func (x *NFTRequest) GetNftid() string {
	if x != nil {
		return x.Nftid
	}
	return ""
}

type NFTResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NFTid     string `protobuf:"bytes,1,opt,name=NFTid,proto3" json:"NFTid,omitempty"`
	NFTSender string `protobuf:"bytes,2,opt,name=NFTSender,proto3" json:"NFTSender,omitempty"`
	NFTWallet string `protobuf:"bytes,3,opt,name=NFTWallet,proto3" json:"NFTWallet,omitempty"`
	Txhash    string `protobuf:"bytes,4,opt,name=Txhash,proto3" json:"Txhash,omitempty"`
	Blockid   string `protobuf:"bytes,5,opt,name=Blockid,proto3" json:"Blockid,omitempty"`
	Blockhash string `protobuf:"bytes,6,opt,name=Blockhash,proto3" json:"Blockhash,omitempty"`
}

func (x *NFTResponse) Reset() {
	*x = NFTResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NFTResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NFTResponse) ProtoMessage() {}

func (x *NFTResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NFTResponse.ProtoReflect.Descriptor instead.
func (*NFTResponse) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{13}
}

func (x *NFTResponse) GetNFTid() string {
	if x != nil {
		return x.NFTid
	}
	return ""
}

func (x *NFTResponse) GetNFTSender() string {
	if x != nil {
		return x.NFTSender
	}
	return ""
}

func (x *NFTResponse) GetNFTWallet() string {
	if x != nil {
		return x.NFTWallet
	}
	return ""
}

func (x *NFTResponse) GetTxhash() string {
	if x != nil {
		return x.Txhash
	}
	return ""
}

func (x *NFTResponse) GetBlockid() string {
	if x != nil {
		return x.Blockid
	}
	return ""
}

func (x *NFTResponse) GetBlockhash() string {
	if x != nil {
		return x.Blockhash
	}
	return ""
}

type StakeNFT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NFTid       string `protobuf:"bytes,1,opt,name=NFTid,proto3" json:"NFTid,omitempty"`
	NFTSender   string `protobuf:"bytes,2,opt,name=NFTSender,proto3" json:"NFTSender,omitempty"`
	StakeAmount string `protobuf:"bytes,4,opt,name=StakeAmount,proto3" json:"StakeAmount,omitempty"`
	Txhash      string `protobuf:"bytes,5,opt,name=Txhash,proto3" json:"Txhash,omitempty"`
	Blockid     string `protobuf:"bytes,6,opt,name=Blockid,proto3" json:"Blockid,omitempty"`
	Blockhash   string `protobuf:"bytes,7,opt,name=Blockhash,proto3" json:"Blockhash,omitempty"`
	StakedP     string `protobuf:"bytes,10,opt,name=StakedP,proto3" json:"StakedP,omitempty"`
	LockTime    uint64 `protobuf:"varint,8,opt,name=LockTime,proto3" json:"LockTime,omitempty"`
	UnlockTime  uint64 `protobuf:"varint,9,opt,name=UnlockTime,proto3" json:"UnlockTime,omitempty"`
}

func (x *StakeNFT) Reset() {
	*x = StakeNFT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakeNFT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakeNFT) ProtoMessage() {}

func (x *StakeNFT) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakeNFT.ProtoReflect.Descriptor instead.
func (*StakeNFT) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{14}
}

func (x *StakeNFT) GetNFTid() string {
	if x != nil {
		return x.NFTid
	}
	return ""
}

func (x *StakeNFT) GetNFTSender() string {
	if x != nil {
		return x.NFTSender
	}
	return ""
}

func (x *StakeNFT) GetStakeAmount() string {
	if x != nil {
		return x.StakeAmount
	}
	return ""
}

func (x *StakeNFT) GetTxhash() string {
	if x != nil {
		return x.Txhash
	}
	return ""
}

func (x *StakeNFT) GetBlockid() string {
	if x != nil {
		return x.Blockid
	}
	return ""
}

func (x *StakeNFT) GetBlockhash() string {
	if x != nil {
		return x.Blockhash
	}
	return ""
}

func (x *StakeNFT) GetStakedP() string {
	if x != nil {
		return x.StakedP
	}
	return ""
}

func (x *StakeNFT) GetLockTime() uint64 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

func (x *StakeNFT) GetUnlockTime() uint64 {
	if x != nil {
		return x.UnlockTime
	}
	return 0
}

type StakeNFTOldVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NFTid       string `protobuf:"bytes,1,opt,name=NFTid,proto3" json:"NFTid,omitempty"`
	NFTSender   string `protobuf:"bytes,2,opt,name=NFTSender,proto3" json:"NFTSender,omitempty"`
	StakeAmount string `protobuf:"bytes,4,opt,name=StakeAmount,proto3" json:"StakeAmount,omitempty"`
	Txhash      string `protobuf:"bytes,5,opt,name=Txhash,proto3" json:"Txhash,omitempty"`
	Blockid     string `protobuf:"bytes,6,opt,name=Blockid,proto3" json:"Blockid,omitempty"`
	Blockhash   string `protobuf:"bytes,7,opt,name=Blockhash,proto3" json:"Blockhash,omitempty"`
	StakedP     string `protobuf:"bytes,10,opt,name=StakedP,proto3" json:"StakedP,omitempty"`
	LockTime    string `protobuf:"bytes,8,opt,name=LockTime,proto3" json:"LockTime,omitempty"`
	UnlockTime  string `protobuf:"bytes,9,opt,name=UnlockTime,proto3" json:"UnlockTime,omitempty"`
}

func (x *StakeNFTOldVersion) Reset() {
	*x = StakeNFTOldVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakeNFTOldVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakeNFTOldVersion) ProtoMessage() {}

func (x *StakeNFTOldVersion) ProtoReflect() protoreflect.Message {
	mi := &file_utxo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakeNFTOldVersion.ProtoReflect.Descriptor instead.
func (*StakeNFTOldVersion) Descriptor() ([]byte, []int) {
	return file_utxo_proto_rawDescGZIP(), []int{15}
}

func (x *StakeNFTOldVersion) GetNFTid() string {
	if x != nil {
		return x.NFTid
	}
	return ""
}

func (x *StakeNFTOldVersion) GetNFTSender() string {
	if x != nil {
		return x.NFTSender
	}
	return ""
}

func (x *StakeNFTOldVersion) GetStakeAmount() string {
	if x != nil {
		return x.StakeAmount
	}
	return ""
}

func (x *StakeNFTOldVersion) GetTxhash() string {
	if x != nil {
		return x.Txhash
	}
	return ""
}

func (x *StakeNFTOldVersion) GetBlockid() string {
	if x != nil {
		return x.Blockid
	}
	return ""
}

func (x *StakeNFTOldVersion) GetBlockhash() string {
	if x != nil {
		return x.Blockhash
	}
	return ""
}

func (x *StakeNFTOldVersion) GetStakedP() string {
	if x != nil {
		return x.StakedP
	}
	return ""
}

func (x *StakeNFTOldVersion) GetLockTime() string {
	if x != nil {
		return x.LockTime
	}
	return ""
}

func (x *StakeNFTOldVersion) GetUnlockTime() string {
	if x != nil {
		return x.UnlockTime
	}
	return ""
}

var File_utxo_proto protoreflect.FileDescriptor

var file_utxo_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x74, 0x78, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x0b, 0x55, 0x54, 0x58, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x22, 0xfe, 0x01, 0x0a, 0x0c, 0x55,
	0x54, 0x58, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x14, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xad,
	0x01, 0x0a, 0x18, 0x55, 0x54, 0x58, 0x4f, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x2b, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x74, 0x78, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x74, 0x78, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x74, 0x78, 0x12, 0x10,
	0x0a, 0x03, 0x4e, 0x46, 0x54, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x46, 0x54,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3a,
	0x0a, 0x12, 0x55, 0x54, 0x58, 0x4f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x5c, 0x0a, 0x13, 0x55, 0x54,
	0x58, 0x4f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x09, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x74, 0x78, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x74, 0x78, 0x52, 0x09, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x74, 0x78, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x22, 0xa0, 0x02, 0x0a, 0x08, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x74, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x72, 0x6f, 0x6d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x6f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x6f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x78, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x78, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x78, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x78, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x78, 0x68, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x41, 0x0a, 0x15, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x70,
	0x0a, 0x15, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x0d, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x36, 0x0a, 0x0e, 0x56, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0f, 0x56, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x0a, 0x4e, 0x46, 0x54, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x66, 0x74, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x66, 0x74, 0x69, 0x64, 0x22, 0xaf, 0x01, 0x0a,
	0x0b, 0x4e, 0x46, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x4e, 0x46, 0x54, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x46, 0x54,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x46, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x46, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x46, 0x54, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x46, 0x54, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x54, 0x78, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x22, 0x86,
	0x02, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x4e, 0x46, 0x54, 0x12, 0x14, 0x0a, 0x05, 0x4e,
	0x46, 0x54, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x46, 0x54, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x46, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x46, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x54, 0x78, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x50, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x50, 0x12, 0x1a, 0x0a, 0x08, 0x4c,
	0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x4c,
	0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x90, 0x02, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x4e, 0x46, 0x54, 0x4f, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x4e, 0x46, 0x54, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4e,
	0x46, 0x54, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x46, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x46, 0x54, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x78, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x50, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x50, 0x12, 0x1a,
	0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xc2, 0x03, 0x0a, 0x05, 0x55,
	0x54, 0x58, 0x4f, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x55, 0x54, 0x58, 0x4f, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x54, 0x58, 0x4f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x54, 0x58, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x30, 0x01, 0x12, 0x38, 0x0a, 0x09, 0x4e, 0x46, 0x54, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x46, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x46, 0x54, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x0d,
	0x56, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x30, 0x01, 0x12, 0x55, 0x0a, 0x13, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x4a, 0x0a, 0x0b, 0x55, 0x54, 0x58,
	0x4f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x54, 0x58, 0x4f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x54, 0x58, 0x4f,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x58, 0x0a, 0x14, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_utxo_proto_rawDescOnce sync.Once
	file_utxo_proto_rawDescData = file_utxo_proto_rawDesc
)

func file_utxo_proto_rawDescGZIP() []byte {
	file_utxo_proto_rawDescOnce.Do(func() {
		file_utxo_proto_rawDescData = protoimpl.X.CompressGZIP(file_utxo_proto_rawDescData)
	})
	return file_utxo_proto_rawDescData
}

var file_utxo_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_utxo_proto_goTypes = []interface{}{
	(*UTXORequest)(nil),              // 0: proto.UTXORequest
	(*UTXOResponse)(nil),             // 1: proto.UTXOResponse
	(*WalletBalanceRequest)(nil),     // 2: proto.WalletBalanceRequest
	(*WalletBalanceRespose)(nil),     // 3: proto.WalletBalanceRespose
	(*UTXOWalletBalanceRespose)(nil), // 4: proto.UTXOWalletBalanceRespose
	(*UTXOAddressRequest)(nil),       // 5: proto.UTXOAddressRequest
	(*UTXOAddressResponse)(nil),      // 6: proto.UTXOAddressResponse
	(*Wallettx)(nil),                 // 7: proto.Wallettx
	(*WalletBalancesRequest)(nil),    // 8: proto.WalletBalancesRequest
	(*WalletBalancesRespose)(nil),    // 9: proto.WalletBalancesRespose
	(*VWalletRequest)(nil),           // 10: proto.VWalletRequest
	(*VWalletResponse)(nil),          // 11: proto.VWalletResponse
	(*NFTRequest)(nil),               // 12: proto.NFTRequest
	(*NFTResponse)(nil),              // 13: proto.NFTResponse
	(*StakeNFT)(nil),                 // 14: proto.StakeNFT
	(*StakeNFTOldVersion)(nil),       // 15: proto.StakeNFTOldVersion
}
var file_utxo_proto_depIdxs = []int32{
	7,  // 0: proto.UTXOWalletBalanceRespose.wallettx:type_name -> proto.Wallettx
	7,  // 1: proto.UTXOAddressResponse.Wallettxs:type_name -> proto.Wallettx
	3,  // 2: proto.WalletBalancesRespose.walletAddress:type_name -> proto.WalletBalanceRespose
	1,  // 3: proto.UTXOs.UTXOStream:input_type -> proto.UTXOResponse
	12, // 4: proto.UTXOs.NFTStream:input_type -> proto.NFTRequest
	10, // 5: proto.UTXOs.VWalletStream:input_type -> proto.VWalletRequest
	2,  // 6: proto.UTXOs.WalletBalanceStream:input_type -> proto.WalletBalanceRequest
	5,  // 7: proto.UTXOs.UTXOAddress:input_type -> proto.UTXOAddressRequest
	8,  // 8: proto.UTXOs.WalletBalancesStream:input_type -> proto.WalletBalancesRequest
	1,  // 9: proto.UTXOs.UTXOStream:output_type -> proto.UTXOResponse
	13, // 10: proto.UTXOs.NFTStream:output_type -> proto.NFTResponse
	11, // 11: proto.UTXOs.VWalletStream:output_type -> proto.VWalletResponse
	3,  // 12: proto.UTXOs.WalletBalanceStream:output_type -> proto.WalletBalanceRespose
	6,  // 13: proto.UTXOs.UTXOAddress:output_type -> proto.UTXOAddressResponse
	9,  // 14: proto.UTXOs.WalletBalancesStream:output_type -> proto.WalletBalancesRespose
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_utxo_proto_init() }
func file_utxo_proto_init() {
	if File_utxo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_utxo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UTXORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UTXOResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalanceRespose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UTXOWalletBalanceRespose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UTXOAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UTXOAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallettx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalancesRespose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NFTRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NFTResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakeNFT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxo_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakeNFTOldVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_utxo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_utxo_proto_goTypes,
		DependencyIndexes: file_utxo_proto_depIdxs,
		MessageInfos:      file_utxo_proto_msgTypes,
	}.Build()
	File_utxo_proto = out.File
	file_utxo_proto_rawDesc = nil
	file_utxo_proto_goTypes = nil
	file_utxo_proto_depIdxs = nil
}
